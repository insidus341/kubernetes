apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: kube-logging
  labels:
    app: fluentd

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  labels:
    app: fluentd
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: kube-logging

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: kube-logging
data:
  # fluent.conf: |-
  #   // Main configuration
  #   @include nginx.conf
  #   @include kubernetes.conf
  #   @include match-default.conf

  nginx.conf: |-
    <source>
        @type tail
        path /var/log/containers/nginx-*.log
        pos_file /var/log/nginx-containers.log.pos
        tag kubernetes-nginx.*
        read_from_head true

        <parse>
          @type "#{ENV['FLUENT_CONTAINER_TAIL_PARSER_TYPE'] || 'json'}"
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </parse>
    </source>

    <filter kubernetes-nginx.**>
      @type parser
      key_name log

      <parse>
        @type regexp
        @type json
        expression ^\[(?<logtime>[^\]]*)\] \- (?<server_addr>[^ ]*) (?<port>[^ ]*) (?<remote_addr>[^ ]*) (?<hostname>[^ ]*) (?<request_method>[^ ]*) (?<uri>[^ ]*) (?<status>[^ ]*) (?<response_time>[^ ]*) (?<body_bytes_sent>[^ ]*) \\"(?<user_agent>[^\"]*)\"\\n
        time_format %d/%b/%Y:%H:%M:%S %z
      </parse>
    </filter>

    <filter kubernetes-nginx.**>
      @type kubernetes_metadata
    </filter>

    <match kubernetes-nginx.**>
      @type file
      path /tmp/nginx-test.log
    </match>

  # match-default.conf: |-
  #   <match kubernetes.nginx.**>
  #     @type file
  #     path /tmp/nginx-test.log
  #   </match>

  #   <match **>
  #     @type elasticsearch
  #     @id out_es
  #     @log_level info
  #     include_tag_key true

  #     host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
  #     port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
  #     path "#{ENV['FLUENT_ELASTICSEARCH_PATH']}"
  #     scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME'] || 'http'}"
  #     ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
  #     ssl_version "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERSION'] || 'TLSv1'}"
  #     reload_connections "#{ENV['FLUENT_ELASTICSEARCH_RELOAD_CONNECTIONS'] || 'false'}"
  #     reconnect_on_error "#{ENV['FLUENT_ELASTICSEARCH_RECONNECT_ON_ERROR'] || 'true'}"
  #     reload_on_failure "#{ENV['FLUENT_ELASTICSEARCH_RELOAD_ON_FAILURE'] || 'true'}"
  #     log_es_400_reason "#{ENV['FLUENT_ELASTICSEARCH_LOG_ES_400_REASON'] || 'false'}"
  #     logstash_prefix "#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_PREFIX'] || 'logstash'}"
  #     logstash_format "#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_FORMAT'] || 'true'}"
  #     index_name "#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_INDEX_NAME'] || 'logstash'}"
  #     type_name "#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_TYPE_NAME'] || 'fluentd'}"
      
  #     <buffer>
  #       flush_thread_count "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_FLUSH_THREAD_COUNT'] || '8'}"
  #       flush_interval "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_FLUSH_INTERVAL'] || '5s'}"
  #       chunk_limit_size "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_CHUNK_LIMIT_SIZE'] || '2M'}"
  #       queue_limit_length "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_QUEUE_LIMIT_LENGTH'] || '32'}"
  #       retry_max_interval "#{ENV['FLUENT_ELASTICSEARCH_BUFFER_RETRY_MAX_INTERVAL'] || '30'}"
  #       retry_forever true
  #     </buffer>
  #   </match>

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: kube-logging
  labels:
    app: fluentd
spec:
  selector:
    matchLabels:
      app: fluentd

  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        # image: fluent/fluentd-kubernetes-daemonset:v1.4.2-debian-elasticsearch-1.1
        image: fluent/fluentd-kubernetes-daemonset:v1-debian-elasticsearch
        env:
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: "elasticsearch.kube-logging.svc.cluster.local"
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: "9200"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "http"
          - name: FLUENTD_SYSTEMD_CONF
            value: disable
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: fluentd-config
          mountPath: /fluentd/etc/conf.d
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluentd-config
        configMap:
          name: fluentd-config